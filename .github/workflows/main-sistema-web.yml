name: AutomacaoSalas-WEB Deploy (Release)
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Restore test dependencies
      run: |
        cd Codigo\ModuloDeSoftware\AutomacaoSalas\ServiceTests
        dotnet restore
    
    - name: Run tests
      run: |
        cd Codigo\ModuloDeSoftware\AutomacaoSalas\ServiceTests
        dotnet test --configuration Release --no-restore --verbosity normal
    
  build-and-deploy:
    needs: test
    runs-on: windows-latest
    
    env:
      work-directory: Codigo/ModuloDeSoftware/AutomacaoSalas/SalasWeb
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Replace connection string
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.work-directory}}/appsettings.json'
      env:
        ConnectionStrings.MySqlConnection: ${{secrets.CONNECTION_STRING}}
    
    - name: Restore dependencies
      run: |
        cd ${{env.work-directory}}
        dotnet restore
    
    - name: Build Application
      run: |
        cd ${{env.work-directory}}
        dotnet build --configuration Release --no-restore
    
    - name: Publish Application
      run: |
        cd ${{env.work-directory}}
        dotnet publish --configuration Release --no-build --output ./publishWEB
    
    # ETAPA 1: App_Offline para parar a aplica√ß√£o
    - name: Create and Deploy App_Offline
      run: |
        cd ${{env.work-directory}}/publishWEB
        echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>Manuten√ß√£o</title></head><body><h1>Site em Manuten√ß√£o</h1><p>Voltaremos em instantes...</p></body></html>" > app_offline.htm
        
        # Upload apenas o app_offline.htm via PowerShell FTP
        $ftpServer = "win8184.site4now.net"
        $ftpUsername = "itetech-001"
        $ftpPassword = "${{ secrets.FTP_PASSWORD }}"
        $localFile = "app_offline.htm"
        $remoteFile = "/salasweb/app_offline.htm"
        
        try {
          $ftpRequest = [System.Net.FtpWebRequest]::Create("ftp://$ftpServer$remoteFile")
          $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::UploadFile
          $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($ftpUsername, $ftpPassword)
          
          $fileContent = Get-Content $localFile -Raw -Encoding UTF8
          $data = [System.Text.Encoding]::UTF8.GetBytes($fileContent)
          
          $ftpRequest.ContentLength = $data.Length
          $requestStream = $ftpRequest.GetRequestStream()
          $requestStream.Write($data, 0, $data.Length)
          $requestStream.Close()
          
          $response = $ftpRequest.GetResponse()
          Write-Host "‚úÖ App_Offline enviado com sucesso!"
          $response.Close()
        }
        catch {
          Write-Host "‚ùå Erro ao enviar App_Offline: $($_.Exception.Message)"
          throw
        }
    
    # ETAPA 2: Aguardar aplica√ß√£o parar
    - name: Wait for application to stop
      run: Start-Sleep -Seconds 20
    
    # ETAPA 3: Deploy da aplica√ß√£o
    - name: Deploy Application Files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8184.site4now.net
        username: itetech-001
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: '${{env.work-directory}}/publishWEB/'
        server-dir: /salasweb/
        exclude: |
          **/.git*
          **/.git*/**
          **/obj/**
          **/bin/**
          app_offline.htm
    
    # ETAPA 4: Remover App_Offline para reativar o site
    - name: Remove App_Offline
      run: |
        $ftpServer = "win8184.site4now.net"
        $ftpUsername = "itetech-001"
        $ftpPassword = "${{ secrets.FTP_PASSWORD }}"
        $remoteFile = "/salasweb/app_offline.htm"
        
        try {
          $ftpRequest = [System.Net.FtpWebRequest]::Create("ftp://$ftpServer$remoteFile")
          $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::DeleteFile
          $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($ftpUsername, $ftpPassword)
          
          $response = $ftpRequest.GetResponse()
          Write-Host "‚úÖ App_Offline removido com sucesso!"
          $response.Close()
        }
        catch {
          Write-Host "‚ö†Ô∏è Erro ao remover App_Offline (pode j√° ter sido removido): $($_.Exception.Message)"
        }
    
    # ETAPA 5: Verificar se o site voltou
    - name: Verify site is back online
      run: |
        Write-Host "üîç Verificando se o site voltou ao normal..."
        Start-Sleep -Seconds 10
        try {
          $response = Invoke-WebRequest -Uri "http://itetech-001-site2.qtempurl.com" -TimeoutSec 30
          Write-Host "‚úÖ Site est√° online - Status: $($response.StatusCode)"
        }
        catch {
          Write-Host "‚ö†Ô∏è Site ainda pode estar reiniciando: $($_.Exception.Message)"
        }
