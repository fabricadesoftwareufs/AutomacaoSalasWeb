name: AutomacaoSalas-WEB Deploy (Release)
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Restore test dependencies
      run: |
        cd Codigo\ModuloDeSoftware\AutomacaoSalas\ServiceTests
        dotnet restore
    
    - name: Run tests
      run: |
        cd Codigo\ModuloDeSoftware\AutomacaoSalas\ServiceTests
        dotnet test --configuration Release --no-restore --verbosity normal
    
  build-and-deploy:
    needs: test
    runs-on: windows-latest
    
    env:
      work-directory: Codigo/ModuloDeSoftware/AutomacaoSalas/SalasWeb
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Replace connection string
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.work-directory}}/appsettings.json'
      env:
        ConnectionStrings.MySqlConnection: ${{secrets.CONNECTION_STRING}}
    
    - name: Restore dependencies
      run: |
        cd ${{env.work-directory}}
        dotnet restore
    
    - name: Build Application
      run: |
        cd ${{env.work-directory}}
        dotnet build --configuration Release --no-restore
    
    - name: Publish Application
      run: |
        cd ${{env.work-directory}}
        dotnet publish --configuration Release --no-build --output ./publishWEB
    
    # Deploy direto da aplica√ß√£o
    - name: Deploy Application Files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8184.site4now.net
        username: itetech-001
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: '${{env.work-directory}}/publishWEB/'
        server-dir: /salasweb/
        exclude: |
          **/.git*
          **/.git*/**
          **/obj/**
          **/bin/**
    
    # Verificar se o site est√° funcionando
    - name: Verify site is online
      run: |
        Write-Host "üîç Verificando se o site est√° funcionando..."
        Start-Sleep -Seconds 15
        try {
          $response = Invoke-WebRequest -Uri "http://itetech-001-site2.qtempurl.com" -TimeoutSec 30
          Write-Host "‚úÖ Site est√° online - Status: $($response.StatusCode)"
        }
        catch {
          Write-Host "‚ö†Ô∏è Site pode estar reiniciando: $($_.Exception.Message)"
        }